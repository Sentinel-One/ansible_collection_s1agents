name: S1 Agent Download
on:
  push:
    branches:
      - 'release/**'
    paths:
      - 'roles/s1_agent_download/**'
      - '!roles/s1_agent_download/README.md'
      - '!roles/s1_agent_download/makefile'
      - '.github/workflows/s1_agent_download.yml'
      - 'requirements.yml'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'roles/s1_agent_download/**'
      - '!roles/s1_agent_download/README.md'
      - '!roles/s1_agent_download/makefile'
      - '.github/workflows/s1_agent_download.yml'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  molecule-test:
    name: '${{ matrix.boxes.display_name }} (â’¶ ${{ matrix.versions.ansible }})'
    runs-on: [self-hosted, Linux, X64, ansible-collection]
    # env:
    #   ANSIBLE_FORCE_COLOR: 1 # allows ansible colors to be passed to GitHub Actions
    #   PY_COLORS: 1 # allows molecule colors to be passed to GitHub Actions
    #   S1_AGENT_SITE_TOKEN: ${{ secrets.S1_AGENT_SITE_TOKEN }}
    #   S1_API_TOKEN: ${{ secrets.S1_API_TOKEN }}
    #   S1_MANAGEMENT_CONSOLE: https://usea1-support3.sentinelone.net
    #   S1_MOLECULE_HOSTNAME: falling-lab
    #   VAGRANT_DEFAULT_PROVIDER: virtualbox
    #   VAGRANT_HOME: /opt/hostedtoolcache/Vagrant
    strategy:
      fail-fast: false
      matrix:
        boxes:
          - distribution: opensuse15
            repository: roboxes
            connection: ssh
            display_name: OpenSuse 15
          - distribution: rocky8
            repository: roboxes
            connection: ssh
            display_name: Rocky 8
          - distribution: ubuntu2204
            repository: roboxes
            connection: ssh
            display_name: Ubuntu 22.04
          - distribution: windows-server-2022-standard
            repository: gusztavvargadr
            connection: ssh
            display_name: Server 2022
            group: Windows
          - distribution: WindowsServer2012R2
            repository: jborean93
            connection: winrm
            display_name: Server 2012r2
        scenario-name:
          - default
          - winrm_default
        versions:
          # ansible-core upstream development supports 3 releases at a time
          # https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html
          - ansible: stable-2.12 # EOL 2023-05-23
            python: '3.10'
          - ansible: stable-2.13 # EOL 2023-11-06
            python: '3.10'
          - ansible: stable-2.14 # EOL 2024-05-20
            python: '3.10'
        exclude:
          # OpenSSH is not supported on Windows Server 2012r2. We need to use
          # custom scenarios configured for winrm connections. Exclude normal
          # scenarios for winrm connections and winrm_* scenarios for ssh
          # connections.
          - { boxes: { connection: winrm }, scenario-name: default }
          - { boxes: { connection: ssh }, scenario-name: winrm_default }
        include:
          # ansible-core versions newer than 2.12 require python 2.7, which is not
          # available out of the box in RedHat/CentOS 6. We include centos6 here,
          # instead of in the matrix, so that it is only tested once against the
          # last supported version of ansible-core (2.12). CentOS 6 will continue
          # to be tested against ansible-core-2.12 until CentOS 6 is deprecated
          # or a better solution presents itself.
          - {
              boxes:
                {
                  distribution: centos6,
                  repository: roboxes,
                  display_name: CentOS 6,
                },
              scenario-name: default,
              versions: { ansible: stable-2.12, python: '3.10' },
            }

    uses: ./.github/workflows/ci-molecule.yml
    with:
      box_distribution: ${matrix.boxes.distribution}
      box_repository: ${matrix.boxes.repository}
      ansible_connection: ${matrix.boxes.connection}
      ansible_group: ${matrix.boxes.connection}
      display_name: ${matrix.boxes.display_name}
      scenario_name: ${matrix.scenario-name}
      ansible_version: ${matrix.versions.ansible}
      python_version: ${matrix.versions.python}
    secrets: inherit
