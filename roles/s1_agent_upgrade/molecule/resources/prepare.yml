---
- name: Prepare
  hosts: all
  gather_facts: yes
  gather_subset:
    - '!all'
    - '!hardware'
    - min
  tasks:
    - name: Include tasks to clean up package managers | Linux
      ansible.builtin.include_tasks:
        file: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/../../../s1_agent_common/molecule/common_files/tasks/prepare_package_manager.yml"
      when:
        - ansible_system == 'Linux'

    - name: Install older SentinelOne Agent
      ansible.builtin.include_role:
        name: s1_agent_install
      vars:
        s1_release_n_minus: 1
        s1_install_gpg_signed_rpm: false
        s1_reboot_handler_name: Reboot Node | {{ ansible_os_family }} | Unit Testing

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Clear cached facts
      ansible.builtin.meta: clear_facts

    - name: Refresh facts
      ansible.builtin.setup:
        gather_subset:
          - '!all'
          - '!hardware'
          - min

    - name: Include common vars
      ansible.builtin.include_vars:
        file: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/../../../s1_agent_common/vars/main.yml"

    - name: Get the agent's state
      ansible.builtin.include_role:
        name: s1_agent_info

    - name: Persist facts for verify step
      ansible.builtin.set_fact:
        # yamllint disable-line rule:line-length
        s1_molecule_prior_version: "{{ s1_agent_version if ansible_os_family != 'Windows' else s1_agent_version | regex_replace('(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)', '\\1.\\2.\\4') }}"
        s1_molecule_prior_package: '{{ s1_agent_path | basename }}'
        cacheable: yes

    - name: Assert SentinelOne Agent was installed from non-GPG signed package
      ansible.builtin.assert:
        that:
          - s1_molecule_prior_package is defined
          - s1_molecule_prior_package is regex('^Sentinel.*')
      when:
        - ansible_pkg_mgr is defined
        - ansible_pkg_mgr in rpm_pkg_mgrs

    - name: Wait for agent to register with Management Console
      ansible.builtin.uri:
        url: '{{ s1_management_console }}/web/api/v2.1/agents?uuid={{ s1_agent_info.uuid }}&isActive=true'
        return_content: false
        headers:
          Authorization: 'ApiToken {{ s1_api_token }}'
      environment:
        http_proxy: '{{ s1_agent_management_proxy | default(None) | default(omit) }}'
        https_proxy: '{{ s1_agent_management_proxy | default(None) | default(omit) }}'
      register: s1_agent_registered
      until:
        - s1_agent_registered is not failed
        - s1_agent_registered.json.pagination.totalItems == 1
      retries: 10
      delay: 10
      become: no
      delegate_to: localhost

    - name: Show installer path
      ansible.builtin.debug:
        var: s1_molecule_prior_package
