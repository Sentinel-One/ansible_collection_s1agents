---
# tasks file for s1_agent_download
- name: Set GPG signed x86_64 RPM SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.rpm') | selectattr('fileName', 'match', '^Signed-SentinelAgent[_-]linux') | list | first }}"
  when:
    - ansible_system == 'Linux'
    - ansible_architecture == 'x86_64'
    - ansible_pkg_mgr in rpm_pkg_mgrs
    - s1_install_gpg_signed_rpm | default('no') | bool

- name: Set GPG signed aarch64 RPM SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.rpm') | selectattr('fileName', 'match', '^Signed-SentinelAgent-aarch64_linux') | list | first }}"
  when:
    - ansible_system == 'Linux'
    - ansible_architecture == 'aarch64'
    - ansible_pkg_mgr in rpm_pkg_mgrs
    - s1_install_gpg_signed_rpm | default('no') | bool

- name: Set x86_64 RPM SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.rpm') | selectattr('fileName', 'match', '^SentinelAgent[_-]linux') | list | first }}"
  when:
    - ansible_system == 'Linux'
    - ansible_architecture == 'x86_64'
    - ansible_pkg_mgr in rpm_pkg_mgrs
    - not s1_install_gpg_signed_rpm | default('no') | bool

- name: Set aarch64 RPM SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.rpm') | selectattr('fileName', 'match', '^SentinelAgent[_-]aarch64_linux') | list | first }}"
  when:
    - ansible_system == 'Linux'
    - ansible_architecture == 'aarch64'
    - ansible_pkg_mgr in rpm_pkg_mgrs
    - not s1_install_gpg_signed_rpm | default('no') | bool

- name: Set x86_64 DEB SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.deb') | selectattr('fileName', 'match', '^SentinelAgent[_-]linux') | list | first }}"
  when:
    - ansible_system == 'Linux'
    - ansible_architecture == 'x86_64'
    - ansible_pkg_mgr in apt_pkg_mgrs

- name: Set aarch64 DEB SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.deb') | selectattr('fileName', 'match', '^SentinelAgent-aarch64_linux') | list | first }}"
  when:
    - ansible_system == 'Linux'
    - ansible_architecture == 'aarch64'
    - ansible_pkg_mgr in apt_pkg_mgrs

- name: Set SentinelOneInstaller agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.exe') | selectattr('fileName', 'match', '^SentinelOneInstaller') | selectattr('osArch', 'equalto', (ansible_facts.architecture == '64-bit') | ternary('64 bit', '32 bit')) | list | first }}"
  when:
    - ansible_os_family == 'Windows'
    - not s1_install_msi | default('no') | bool

- name: Set MSI SentinelOne agent source | Specific release
  ansible.builtin.set_fact:
    # yamllint disable-line rule:line-length
    s1_download_src: "{{ s1_available_packages.json.data | selectattr('version', 'equalto', s1_agent_version) | selectattr('fileExtension', 'equalto', '.msi') | selectattr('osArch', 'equalto', (ansible_facts.architecture == '64-bit') | ternary('64 bit', '32 bit')) | list | first }}"
  when:
    - ansible_os_family == 'Windows'
    - s1_install_msi | default('no') | bool
