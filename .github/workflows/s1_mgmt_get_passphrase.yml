name: S1 MGMT Get Passphrase
on:
  push:
    branches:
      - 'main'
    paths:
      - 'roles/s1_mgmt_get_passphrase/**'
      - 'roles/s1_agent_uuid/**'
      - '!roles/s1_mgmt_get_passphrase/README.md'
      - '!roles/s1_agent_uuid/README.md'
      - '.github/workflows/s1_mgmt_get_passphrase.yml'
      - '.github/workflows/s1_agent_uuid.yml'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'roles/s1_mgmt_get_passphrase/**'
      - 'roles/s1_agent_uuid/**'
      - '!roles/s1_mgmt_get_passphrase/README.md'
      - '!roles/s1_agent_uuid/README.md'
      - '.github/workflows/s1_mgmt_get_passphrase.yml'
      - '.github/workflows/s1_agent_uuid.yml'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  molecule-test:
    runs-on: [self-hosted, Linux, X64]
    env:
      ANSIBLE_FORCE_COLOR: 1 # allows ansible colors to be passed to GitHub Actions
      PY_COLORS: 1 # allows molecule colors to be passed to GitHub Actions
      S1_AGENT_SITE_TOKEN: ${{ secrets.S1_AGENT_SITE_TOKEN }}
      S1_API_TOKEN: ${{ secrets.S1_API_TOKEN }}
      S1_MANAGEMENT_CONSOLE: https://usea1-support3.sentinelone.net
      S1_MOLECULE_HOSTNAME: falling-lab
      VAGRANT_DEFAULT_PROVIDER: virtualbox
    strategy:
      fail-fast: false
      matrix:
        boxes:
          - box: roboxes/rocky8
          - box: roboxes/centos6
          - box: roboxes/ubuntu2204
          - box: roboxes/opensuse15
          # - box: gusztavvargadr/windows-server-2022-standard
          #   group: Windows
          #   communicator: winrm
        python-version:
          - '3.8'
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install molecule_vagrant yamllint ansible-lint flake8 pywinrm
          # vagrant plugin install vagrant-vbguest
          # vagrant plugin install winrm
          # vagrant plugin install winrm-elevated
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set environment
        run: |
          BOX=${{ matrix.boxes.box }}
          GROUP=${{ matrix.boxes.group }}
          COMMUNICATOR=${{ matrix.boxes.communicator }}
          echo "S1_VAGRANT_DISTRO=${BOX##*/}" >> $GITHUB_ENV
          echo "S1_VAGRANT_REPO=${BOX%%/*}" >> $GITHUB_ENV
          if [ -n "$GROUP" ]; then echo "S1_VAGRANT_GROUP=${GROUP}" >> $GITHUB_ENV; fi
          if [ -n "$COMMUNICATOR" ]; then echo "S1_VAGRANT_COMMUNICATOR=${COMMUNICATOR}" >> $GITHUB_ENV; fi

      - name: Assert that variables are defined
        if: ${{ (env.S1_VAGRANT_DISTRO == '') || (env.S1_VAGRANT_REPO == '') }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('S1_VAGRANT_DISTRO and S1_VAGRANT_REPO are not set!')

      - name: Execute Molecule Scenarios
        if: success()
        run: >-
          echo ${PWD} &&
          molecule --version &&
          ansible --version &&
          molecule test --all
        working-directory: ./roles/s1_mgmt_get_passphrase

  verify-test:
    needs: molecule-test # run after molecule-test
    runs-on: [self-hosted, Linux, X64]
    if: success() # only run when all molecule-test have passed
    # store success output flag for assert-passed job
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - id: setoutput
        run: echo "::set-output name=success::true"

  assert-passed:
    runs-on: [self-hosted, Linux, X64]
    if: always() # always run, so we never skip the check
    needs: [molecule-test, verify-test]
    steps:
      # pass step only when output of previous verify-test job is set
      # in case at least one of the shard fails, verify-test is skipped
      # and the output will not be set, which will then cause the assert-passed job to fail
      - run: |
          passed="${{ needs.verify-test.outputs.success }}"
          if [[ $passed == "true" ]]; then
            echo "molecule-test passed"
            exit 0
          else
            echo "molecule-test failed"
            exit 1
          fi
