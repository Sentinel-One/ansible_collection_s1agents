---
ansible:
  host_key_checking: false
  raw_env_vars:
    ANSIBLE_FORCE_COLOR: true
  ansiblecfg_defaults:
    retry_files_enabled: false

dependency:
  name: galaxy
  enabled: false

driver:
  name: vagrant
  provider:
    name: '${VAGRANT_DEFAULT_PROVIDER}'
  provision: false

lint: |
  set -e
  yamllint .
  ansible-lint
  flake8

platforms:
  # - name: 's1da-${MOLECULE_SCENARIO_NAME}-cent-8'
  #   groups:
  #     - Linux
  #   children:
  #     - RedHat
  #   box: bento/centos-8
  #   memory: 2048
  #   cpus: 1
  #   config_options:
  #     synced_folder: false
  #   provider_options:
  #     linked_clone: true
  #   # provision: false

  # - name: 's1da-${MOLECULE_SCENARIO_NAME}-cent-6'
  #   groups:
  #     - Linux
  #   children:
  #     - RedHat
  #   box: bento/centos-6.7
  #   memory: 2048
  #   cpus: 1
  #   config_options:
  #     synced_folder: false
  #   provider_options:
  #     linked_clone: true
  #   # provision: false

  # - name: 's1da-${MOLECULE_SCENARIO_NAME}-ubnt-2010'
  #   groups:
  #     - Linux
  #   children:
  #     - Debian
  #   box: roboxes/ubuntu2010
  #   memory: 2048
  #   cpus: 1
  #   config_options:
  #     synced_folder: false
  #   provider_options:
  #     linked_clone: true
  #   # provision: false

  - name: 's1da-${MOLECULE_SCENARIO_NAME}-win-2019'
    groups:
      - Windows
    children:
      - Server
    box: StefanScherer/windows_2019
    memory: 2048
    cpus: 1
    instance_raw_config_args:
      - 'vm.boot_timeout = 600'
      - 'winrm.max_tries = 40'
      - "winrm.username = 'vagrant'"
      - "winrm.password = 'vagrant'"
      - "vm.communicator = 'winrm'"
      - "vm.guest = 'windows'"
      - 'vm.network :forwarded_port, guest: 5985, host: 15985, auto_correct:false'
    config_options:
      synced_folder: false
      vm.communicator: winrm
    provider_options:
      linked_clone: true

provisioner:
  name: ansible
  inventory:
    host_vars:
      s1da-${MOLECULE_SCENARIO_NAME}-win-2019:
        ansible_port: 15985
    group_vars:
      all:
        s1_management_console: "{{ lookup('env', 's1_management_console') }}"
        s1_agent_management_token: "{{ lookup('env', 's1_agent_management_token') }}"
        s1_api_token: "{{ lookup('env', 's1_api_token') }}"
        s1_agent_customer_id: ansible_collection_dev
        s1_agent_version: "{{ lookup('env', 's1_agent_version') }}"
        s1_package_status:
          - Ga
      Linux:
        # s1_agent_version: "{{ lookup('env', 's1_agent_version_linux') }}"
      Debian:
        # s1_agent_version: 21.6.4.9
        # s1_agent_src: "{{ lookup('env', 's1_agent_src_deb') }}"
      RedHat:
        # s1_agent_src: "{{ lookup('env', 's1_agent_src_rpm') }}"
      Windows:
        ansible_become_method: runas
        ansible_become_user: vagrant
        ansible_connection: winrm
        ansible_password: vagrant
        ansible_user: vagrant
        ansible_winrm_scheme: http
        ansible_winrm_transport: basic
        # s1_agent_src: "{{ lookup('env', 's1_agent_src_msi') }}"
      # Darwin:

verifier:
  name: ansible
  # scenario:
  #   create_sequence:
  #     - dependency
  #     - create
  #     - prepare
  #   check_sequence:
  #     - dependency
  #     - cleanup
  #     - destroy
  #     - create
  #     - prepare
  #     - converge
  #     - check
  #     - destroy
  #   converge_sequence:
  #     - dependency
  #     - create
  #     - prepare
  #     - converge
  #     - verify
  #   destroy_sequence:
  #     - dependency
  #     - cleanup
  #     - destroy
  #   test_sequence:
  #     - dependency
  #     - lint
  #     - cleanup
  #     - destroy
  #     - syntax
  #     - create
  #     - prepare
  #     - converge
  #     - idempotence
  #     - side_effect
  #     - verify
  #     - cleanup
  #     - destroy
